import net.fabricmc.loom.task.RemapJarTask
import net.fabricmc.loom.util.aw2at.Aw2At

plugins {
    id("xyz.jpenilla.quiet-architectury-loom") version "1.7-SNAPSHOT"
    id 'maven-publish'
    id 'io.github.goooler.shadow' version '8.1.8'
}

/*
 * Gets the version name from the latest Git tag
 */
// https://stackoverflow.com/questions/28498688/gradle-script-to-autoversion-and-include-the-commit-hash-in-android
def getGitCommit = { ->
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'rev-parse', '--short', 'HEAD'
        standardOutput = stdout
    }
    return stdout.toString().trim()
}

version = project.mod_version + "+fabric." + getGitCommit()
group = project.maven_group

base {
    archivesName = project.archives_base_name
}

repositories {
    mavenLocal {
        mavenContent {
            includeModule("ca.spottedleaf", "concurrentutil")
        }
    }
    maven {
        name = 'NeoForged'
        url = 'https://maven.neoforged.net/releases/'
    }
}

configurations.implementation {
    extendsFrom(configurations.shadow)
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings loom.officialMojangMappings()
    // modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    neoForge 'net.neoforged:neoforge:21.0.153'

    shadow('ca.spottedleaf:concurrentutil:0.0.2-SNAPSHOT')
    shadow('org.yaml:snakeyaml:2.2')
}

processResources {
    inputs.property "version", project.version

    filesMatching("META-INF/neoforge.mods.toml") {
        expand "version": project.version, "minecraft_version": minecraft_version, "loader_version": loader_version, "mod_version": mod_version
    }
}

loom {
    accessWidenerPath = file("src/main/resources/moonrise.accesswidener")
    mixin {
        useLegacyMixinAp = false
    }
}

// make build reproducible
tasks.withType(AbstractArchiveTask).configureEach {
    preserveFileTimestamps = false
    reproducibleFileOrder = true
}

tasks.withType(JavaCompile).configureEach {
    it.options.release = 21
}

java {
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()

    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.base.archivesName.get()}"}
    }
}

shadowJar {
    archiveClassifier = "dev-all"
    destinationDirectory = layout.buildDirectory.dir("libs")
    configurations = [project.configurations.shadow]
    relocate 'ca.spottedleaf.concurrentutil', 'ca.spottedleaf.moonrise.libs.ca.spottedleaf.concurrentutil'
    relocate 'org.yaml.snakeyaml', 'ca.spottedleaf.moonrise.libs.org.yaml.snakeyaml'
}
remapJar {
    inputFile = shadowJar.archiveFile
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
}

Aw2At.setup(getProject(), tasks.remapJar)
